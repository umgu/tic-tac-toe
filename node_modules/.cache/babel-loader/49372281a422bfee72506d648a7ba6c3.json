{"ast":null,"code":"var _jsxFileName = \"E:\\\\web-development\\\\tic-tac-toe-game-react\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Grid } from \"./Grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState([null, null, null, null, null, null, null, null, null]);\n  const [turn, setTurn] = useState(\"cross\");\n  const [winner, setWinner] = useState(false);\n  let winnerGrid = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  let onGridClick = index => {\n    if (!data[index] && !winner) {\n      let newData = data;\n      newData[index] = turn;\n      setData([...newData]);\n      winnerGrid.forEach(winner => {\n        const [x, y, z] = winner;\n\n        if (data[x] && data[x] === data[y] && data[x] == data[z]) {\n          setWinner(true);\n        }\n      });\n      setTurn(turn === \"cross\" ? \"circle\" : \"cross\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      data: data,\n      turn: turn,\n      getGrid: onGridClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), !winner ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: `Turn: ${turn}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 19\n    }, this) : null, winner ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: `${turn === \"cross\" ? \"circle\" : \"cross\"} won the game`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this) : null, data.filter(d => d !== null).length ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Match Draw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 51\n    }, this) : null]\n  }, void 0, true);\n}\n\n_s(App, \"6Xzh7GiB+CcweR/XtjThZaYqJ5M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/web-development/tic-tac-toe-game-react/src/App.js"],"names":["React","useState","logo","Grid","App","data","setData","turn","setTurn","winner","setWinner","winnerGrid","onGridClick","index","newData","forEach","x","y","z","filter","d","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,SAASC,IAAT,QAAqB,QAArB;;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,CAAD,CAAhC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,OAAD,CAAhC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAApC;AAEA,MAAIU,UAAU,GAAG,CACf,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CADe,EAEf,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAFe,EAGf,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAHe,EAIf,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAJe,EAKf,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CALe,EAMf,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CANe,EAOf,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAPe,EAQf,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CARe,CAAjB;;AAWA,MAAIC,WAAW,GAAIC,KAAD,IAAW;AAC3B,QAAG,CAACR,IAAI,CAACQ,KAAD,CAAL,IAAgB,CAACJ,MAApB,EAA4B;AAC1B,UAAIK,OAAO,GAAGT,IAAd;AACAS,MAAAA,OAAO,CAACD,KAAD,CAAP,GAAiBN,IAAjB;AACAD,MAAAA,OAAO,CAAC,CAAC,GAAGQ,OAAJ,CAAD,CAAP;AACAH,MAAAA,UAAU,CAACI,OAAX,CAAoBN,MAAD,IAAY;AAC7B,cAAM,CAACO,CAAD,EAAGC,CAAH,EAAKC,CAAL,IAAUT,MAAhB;;AACA,YAAGJ,IAAI,CAACW,CAAD,CAAJ,IAAWX,IAAI,CAACW,CAAD,CAAJ,KAAUX,IAAI,CAACY,CAAD,CAAzB,IAAgCZ,IAAI,CAACW,CAAD,CAAJ,IAASX,IAAI,CAACa,CAAD,CAAhD,EAAqD;AACnDR,UAAAA,SAAS,CAAC,IAAD,CAAT;AACD;AACF,OALD;AAMAF,MAAAA,OAAO,CAAED,IAAI,KAAK,OAAT,GAAmB,QAAnB,GAA8B,OAAhC,CAAP;AACD;AACF,GAbD;;AAcA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEF,IAAZ;AAAkB,MAAA,IAAI,EAAEE,IAAxB;AAA8B,MAAA,OAAO,EAAEK;AAAvC;AAAA;AAAA;AAAA;AAAA,YADF,EAEI,CAACH,MAAD,gBAAU;AAAA,gBAAM,SAAQF,IAAK;AAAnB;AAAA;AAAA;AAAA;AAAA,YAAV,GAAuC,IAF3C,EAGGE,MAAM,gBAAG;AAAA,gBAAM,GAAGF,IAAI,KAAK,OAAT,GAAmB,QAAnB,GAA8B,OAAQ;AAA/C;AAAA;AAAA;AAAA;AAAA,YAAH,GAAyE,IAHlF,EAIKF,IAAI,CAACc,MAAL,CAAaC,CAAD,IAAOA,CAAC,KAAK,IAAzB,EAA+BC,MAAhC,gBAA0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA1C,GAAgE,IAJpE;AAAA,kBADF;AAQD;;GAtCQjB,G;;KAAAA,G;AAwCT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Grid } from \"./Grid\"\nfunction App() {\n  const [data, setData] = useState([null, null, null, null, null, null, null, null, null]);\n  const [turn, setTurn] = useState(\"cross\");\n  const [winner, setWinner] = useState(false);\n\n  let winnerGrid = [\n    [0,1,2],\n    [3,4,5],\n    [6,7,8],\n    [0,3,6],\n    [1,4,7],\n    [2,5,8],\n    [0,4,8],\n    [2,4,6]\n  ];\n\n  let onGridClick = (index) => {\n    if(!data[index] && !winner) {\n      let newData = data;\n      newData[index] = turn;\n      setData([...newData]);\n      winnerGrid.forEach((winner) => {\n        const [x,y,z] = winner;\n        if(data[x] && data[x]===data[y] && data[x]==data[z]) {\n          setWinner(true);\n        }\n      });\n      setTurn( turn === \"cross\" ? \"circle\" : \"cross\");\n    }\n  }\n  return (\n    <>\n      <Grid data={data} turn={turn} getGrid={onGridClick}/>\n      { !winner ? <h1>{`Turn: ${turn}`}</h1> : null}\n      {winner ? <h1>{`${ turn === \"cross\" ? \"circle\" : \"cross\"} won the game`}</h1> : null}\n      { (data.filter((d) => d !== null).length) ? <h1>Match Draw</h1> : null}\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}